version: "3.9"

services:
  api-gateway:
    build:
      context: ./api-gateway
    volumes:
      - ./common:/app/common
      - ./api-gateway:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - FLASK_DEBUG=1
      - PYTHONDEBUG=1
    ports:
      - "5000:5000"
    depends_on:
      - auth-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - microservices-net

  auth-service:
    build:
      context: ./auth-service
    volumes:
      - ./common:/app/common
      - ./auth-service:/app
    env_file:
      - ./.env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - FLASK_DEBUG=1
      - PYTHONDEBUG=1
    ports:
      - "5001:5001"
    depends_on:
      - config-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/auth/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - microservices-net

  config-service:
    build:
      context: ./config-service
    volumes:
      - ./common:/app/common
      - ./config-service:/app
    env_file:
      - .env
    ports:
      - "5002:5002"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - FLASK_DEBUG=1
      - PYTHONDEBUG=1
    depends_on:
      - redis
      - config-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/config/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - microservices-net

  db-service:
    build:
      context: ./db-service
    volumes:
      - ./common:/app/common
      - ./db-service:/app
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - FLASK_DEBUG=1
      - PYTHONDEBUG=1
    ports:
      - "5003:5003"
    depends_on:
      - nba-db
      - nfl-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/db/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - microservices-net

  config-db:  # Config database for storing tenant configurations
    image: postgres:13
    container_name: config-db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: config_user
      POSTGRES_PASSWORD: config_password
      POSTGRES_DB: config_db
    volumes:
      - config-db-data:/var/lib/postgresql/data
    healthcheck:
      test: []
      interval: 30s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - microservices-net

  nba-db:
    image: postgres:13
    container_name: nba-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: nba_user
      POSTGRES_PASSWORD: nba_password
      POSTGRES_DB: nba_db
    volumes:
      - nba-db-data:/var/lib/postgresql/data
    healthcheck:
      test: []
      interval: 30s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - microservices-net

  nfl-db:
    image: postgres:13
    container_name: nfl-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: nfl_user
      POSTGRES_PASSWORD: nfl_password
      POSTGRES_DB: nfl_db
    volumes:
      - nfl-db-data:/var/lib/postgresql/data
    healthcheck:
      test: []
      interval: 30s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - microservices-net

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: []
      interval: 30s
      timeout: 3s
      retries: 5
    restart: always
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  nba-db-data:
  nfl-db-data:
  config-db-data:
